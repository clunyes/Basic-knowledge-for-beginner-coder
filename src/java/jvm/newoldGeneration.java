package java.jvm;

public class newoldGeneration {
    /**
     * 新生代:Minor GC是发生在新生代中的垃圾收集，采用的复制算法
     *
     * --所谓复制算法就是扫描出存活的对象，并复制到一块新的完全未使用的空间中.
     *
     * 年老代: 年老代里存放的都是存活时间较久的，大小较大的对象，因此年老代使用标记整理算法。当年老代容量满的时候，会触发一次Major GC（full GC），回收年老代和年轻代中不再被使用的对象资源。
     * 所谓标记就是扫描出存活的对象，然后再进行回收未被标记的对象，回收后对用空出的空间要么进行合并，要么标记出来便于下次进行分配，总之就是要减少内存碎片带来的效率损耗。
     *
     * 堆=新生代+老年代，不包括永久代（方法区）
     *
     * 永久代:在Java8中，永久代已经被移除，被一个称为“元数据区”（元空间）的区域所取代。
     * 元空间的本质和永久代类似，都是对JVM规范中方法区的实现。不过元空间与永久代之间最大的区别在于：元空间并不在虚拟机中，而是使用本地内存。
     */
}
